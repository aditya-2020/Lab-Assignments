#include <iostream>
#include <string.h>
using namespace std;

int n,m,k=0;

struct node
{
    int data;
    node *next;
    node *prev;
}*start,*newbie,*rear,*tmp;

int addfront()
{
    newbie=new node;
    cin>>newbie->data;
    newbie->next=NULL;
    newbie->prev=NULL;
    
    if(start==NULL)
        start=rear=newbie;
    else 
    {
        newbie->next=start;
        start->prev=newbie;
        start=newbie;
    }
    k++;
}
int addrear()
{
    newbie=new node;
    cin>>newbie->data;
    newbie->next=NULL;
    newbie->prev=NULL;
    
    if(start==NULL)
        start=rear=newbie;
    else 
    {
        rear->next=newbie;
        newbie->prev=rear;
        rear=newbie;
    }
    k++;
}
int drawfront()
{
    tmp=start->next;
    cout<<start->data<<" ";
    delete start;
    start=tmp;
    start->prev=NULL;
    if(start==NULL) rear=NULL;
    k--;
}
int drawrear()
{
    tmp=rear->prev;
    cout<<rear->data<<" ";
    delete rear;
    rear=tmp;
    rear->next=NULL;
    if(rear==NULL) start=NULL;
    k--;
}
int peekfront()
{
    if(start!=NULL)
    cout<<start->data<<" ";
}
int peekrear()
{
    if(start!=NULL)
    cout<<rear->data<<" ";
}
void isempty()
{
    if(n+k==0) cout<<"yes ";
    else cout<<"no ";
}
void isfull()
{
    if(n+k==52) cout<<"yes ";
    else cout<<"no ";
}
void erase()
{
    tmp=start;
    
    while(tmp!=NULL)
    {
        start=start->next;
        delete tmp;
        tmp=start;
    }
}
int main() 
{
	start=NULL;
	rear=NULL;
	
	char s[25];
	cin>>n>>m;
	
	for(int i=0;i<m;++i)
	{
	    cin>>s;
	    if(!strcmp(s,"addFront")) addfront();
        if(!strcmp(s,"addRear")) addrear();
        if(!strcmp(s,"DrawFront")) drawfront();
        if(!strcmp(s,"DrawRear")) drawrear();
        if(!strcmp(s,"PeekFront")) peekfront();
        if(!strcmp(s,"PeekRear")) peekrear();
        if(!strcmp(s,"IsEmpty")) isempty();
        if(!strcmp(s,"IsFull")) isfull();
	}
	erase();
	return 0;
}
